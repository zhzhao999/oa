<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cnmei.oa.mapper.EmployeeMapper">
	<!-- <resultMap id="BaseResultMap" type="cnmei.oa.pojo.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
	</resultMap> -->

	<insert id="addEmployee" useGeneratedKeys="true" keyProperty="id" parameterType="cnmei.oa.pojo.Employee">
		insert into t_employee
			(ee_id,name,gender,nation,
			birthday,zodiac,card_id,
			telephone,qq,email,
			education,school,major,
			entry_date,probation,regular_date,
			contract_year,contract_end_date,
			center,department,job,on_job)
        values 
        	(#{ee_id},#{name},#{gender},#{nation},
        	#{birthday},#{zodiac},#{card_id},
        	#{telephone},#{qq},#{email},
        	#{education},#{school},#{major},
        	#{entry_date},#{probation},#{regular_date},
        	#{contract_year},#{contract_end_date},
        	#{center},#{department},#{job},#{on_job})
	</insert>
	
	<select id="findAll" resultType="cnmei.oa.pojo.Employee">
		select * from t_employee where on_job = 1
	</select>
	
	<select id="findOne" parameterType="String" resultType="cnmei.oa.pojo.Employee">
		select * from t_employee where id = #{id}
	</select>

	
	<update id="updateById" parameterType="cnmei.oa.pojo.Employee">
		update t_employee set 
			ee_id = #{ee_id},name = #{name}, gender = #{gender},nation = #{nation},
			birthday = #{birthday}, zodiac = #{zodiac},card_id = #{card_id},
        	telephone = #{telephone}, qq = #{qq},email = #{email},
        	education = #{education}, school = #{school}, major = #{major},
        	entry_date= #{entry_date},probation=  #{probation},regular_date = #{regular_date},
        	contract_year= #{contract_year},contract_end_date = #{contract_end_date},
        	center= #{center},department= #{department},job = #{job}
		where id = #{id} 
	</update>
	
	<update id="deleteEm" parameterType="String">
		update t_employee set on_job = 0 where id = #{id}
	</update>

	<select id="findSearch" parameterType="java.util.HashMap" resultType="cnmei.oa.pojo.Employee">
		select e.*,d.`item_name` AS department_name from t_employee e ,t_dict d
        <where>
        	e.`department` = d.`id` and on_job = 1
        	<if test="name != null and name != ''">
                AND name like '%${name}%'
            </if>
            <if test="startTime != null and startTime != ''">
                AND entry_date &gt;= DATE_FORMAT('${startTime}', '%Y-%m-%d')
            </if>
            <if test="endTime != null and endTime != ''">
                AND entry_date &lt;= DATE_FORMAT('${endTime}', '%Y-%m-%d')
            </if>
        </where>
	</select>
	<select id="findRegular" resultType="Integer" parameterType="String">
		select id from t_employee where regular_date_date = DATE_FORMAT(#{time}, '%Y-%m-%d') and on_job = 1
	</select>
	<select id="findContract" resultType="Integer" parameterType="String">
		select id from t_employee where contract_end_date = DATE_FORMAT(#{time}, '%Y-%m-%d') and on_job = 1
	</select>
	<select id="findDateCount" resultType="Integer" parameterType="String">
		SELECT COUNT(id) FROM t_employee WHERE  entry_date =  DATE_FORMAT(#{time}, '%Y-%m-%d')
	</select>
	
	<select id="findAllBySort" resultType="cnmei.oa.bean.EmployeeVO">
		SELECT 
			e.*,d1.`item_name` AS gender_name,d2.`item_name` AS education_name ,
			d3.`item_name` AS center_name, d4.`item_name` AS department_name 
		FROM 
			t_employee e,t_dict d1,t_dict d2,t_dict d3 ,t_dict d4 
		WHERE 
			e.`on_job` = 1
			AND e.`gender` = d1.`id` 
			AND e.`education` = d2.`id` 
			AND e.`center` = d3.`id` 
			AND e.`department` = d4.`id` 
		ORDER BY 
			e.`department`,e.`entry_date` 
	</select>
	<select id="findAllByTime" resultType="cnmei.oa.bean.EmployeeVO">
		SELECT 
			e.*,d1.`item_name` AS gender_name,d2.`item_name` AS education_name ,
			d3.`item_name` AS center_name, d4.`item_name` AS department_name 
		FROM 
			t_employee e,t_dict d1,t_dict d2,t_dict d3 ,t_dict d4 
		WHERE 
			e.`on_job` = 1
			AND e.`gender` = d1.`id` 
			AND e.`education` = d2.`id` 
			AND e.`center` = d3.`id` 
			AND e.`department` = d4.`id` 
		ORDER BY 
			e.`entry_date` 
	</select>
	
</mapper>